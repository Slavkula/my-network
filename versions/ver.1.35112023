Настройка QoS.
Эта часть получается довольно длинной в плане настроек (а может быть ещё длиннее) т.к. multi-field qos как бы намекает названием, что помечать можно много разного.

Рабочий плейбук: https://github.com/Slavkula/my-network/blob/main/playbooks/qos.yml
Мне не нужно раздавать одно и то же на все свои пограничные роутеры (хотя у всех интерфейсы во вне это e0/3), поэтому ограничусь одним роутером - R6.
Переписывать плейбук не буду, использую названия задач:
1.  - name: ACL ssh
    - name: ACL telnet
    - name: ACL ICMP
В этих трёх создаются ацл для трафика, который будем отлавливать. Лабу усложнять не буду, образцы acl'ов есть, по необходимости можно добавиь любую фильтрацию:
порты, протоколы, ip-адреса источника\назначения...

2.  - name: class-map ssh
    - name: class-map telnet
    - name: class-map ICMP
Следующие три создают class-map в них и указываем отлавливать траффик согласно созданным ранее ацл.

3.  - name: policy-map ssh
    - name: policy-map telnet
    - name: policy-map icmp
Определяем политику поведения:
а) общая для этих трёх классов (ssh, telnet, icmp)
б) определяем класс (предыдущий пункт)
в) выставляем dscp

4. Устанавливаем политику на интерфейс. В моём случае это input для ethernet 0/3.
5. Проверка маркировки тут: https://github.com/Slavkula/my-network/blob/main/PNG/ver.1.35112023.PNG
Для telnet ставил dscp af43, icmp получил af33

6. Добавляю полисер. Пытался найти как устанавливать настройку через ансибл, но не нашёл, поэтому в этом случае использую ручную:
police cir percent 30 bc 30 ms be 10 ms conform-action transmit exceed-action drop
Задаю гарантию пропуска в 30% полосы на 30 ms, если я всё правильно понял по настройкам с использованием процентов, то be 10 ms - указывает на всплеск до 10% от CIR
в течение 1 секунды для избыточного трафика. Настройка использует два "цвета" для траффика:
зелёный: conform-action transmit
красный: exceed-action drop
Подходящий по параметрам передаётся, излишний отбрасывается. 
